{"version":3,"sources":["components/Toolbar.tsx","components/Fetching.tsx","models/DetailRdv.ts","services/ReservationService.tsx","components/reservations/Reservations.tsx","components/reservations/Reservation.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["NavBar","Fragment","className","role","to","activeClassName","style","color","Fetching","Component","DetailRdv","nom","prenom","email","categorie","date","heureRdv","id","this","ReservationServices","getReservations","fetch","then","response","ok","json","Promise","reject","status","Reservations","props","onFetching","data","setTimeout","setState","prevState","reservations","error","componentDidMount","detailRDV","state","map","reservation","height","width","href","aria-hidden","Reservation","addReservation","method","onSubmit","type","pattern","App","showfetching","fetching","Toolbar","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4fd99a9c.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nfunction NavBar() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"toolbar\" role=\"banner\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-2\">\r\n              <NavLink to=\"/\" activeClassName=\"App-link\"  style={{color: 'white'}}><strong>Accueil</strong></NavLink>\r\n              </div>\r\n\r\n              <div className=\"col-md-2\">\r\n              <NavLink to=\"/reservation\" activeClassName=\"App-link\" style={{color: 'white'}}><strong>Reservation</strong></NavLink>\r\n              </div>\r\n\r\n              <div className=\"col-md-2\">\r\n              <NavLink to=\"/reservations\" activeClassName=\"App-link\"  style={{color: 'white'}}><strong>Liste des réservations</strong></NavLink>\r\n              </div>\r\n\r\n              <div className=\"col-md-2\">\r\n              <NavLink to=\"/\" activeClassName=\"App-link\"   style={{color: 'white'}}><strong>S'inscrire</strong></NavLink>\r\n              </div>\r\n\r\n              <div className=\"col-md-2\">\r\n              <NavLink to=\"/\" activeClassName=\"App-link\"   style={{color: 'white'}}><strong>Liste des inscriptions</strong></NavLink>\r\n              </div>\r\n\r\n              <div className=\"col-md-2\">\r\n              <NavLink to=\"/\" activeClassName=\"App-link\"   style={{color: 'white'}}><strong>Préstations</strong></NavLink>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n          <div className=\"spacer\"></div>\r\n\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n\r\n}\r\nexport default NavBar;\r\n","import React, {Component} from 'react';\r\nimport { FaSpinner } from 'react-icons/fa';\r\nimport '../App.css';\r\nclass Fetching extends Component {\r\n\r\n    render() {\r\n        return ( \r\n        <div className=\"fetching\">\r\n            <FaSpinner className=\"spinner\" />\r\n        </div>\r\n        )}\r\n};\r\n\r\nexport default Fetching;","export class DetailRdv {\r\n    nom: string;\r\n    prenom: string;\r\n    email:string;\r\n    categorie:string\r\n    date:string;\r\n    heureRdv:string;\r\n    id?:number\r\n\tconstructor(nom: string, prenom:string,email:string,categorie:string,date: string, heureRdv:string,id?:number ){\r\n\t\tthis.nom = nom;\r\n        this.prenom =prenom;\r\n        this.email=email;\r\n        this.date=date;\r\n        this.categorie=categorie;\r\n        this.heureRdv= heureRdv;\r\n        this.id=id\r\n\t}\r\n}","class ReservationServices {\r\n\r\n    static getReservations = () => {\r\n      return fetch(\"http://localhost:3001/reservations\")\r\n        .then(response => {\r\n          if (response.ok) {\r\n            return response.json();\r\n  \r\n          } else {\r\n            return Promise.reject(response.status);\r\n          }\r\n        });\r\n    };\r\n}\r\n\r\nexport default ReservationServices;","import React, { Component } from 'react';\r\nimport { DetailRdv } from '../../models/DetailRdv';\r\nimport ReservationServices from '../../services/ReservationService';\r\n\r\ninterface IRecipeProps {\r\n    onFetching: (fetching:boolean) => void\r\n  }\r\n  \r\n  interface IRecipeState {\r\n    reservations: [DetailRdv],\r\n    error:string\r\n  }\r\n\r\nclass Reservations extends Component<IRecipeProps, IRecipeState> {\r\n    constructor(props:any) {\r\n        super(props)\r\n        let detailRDV = new DetailRdv('','','','','','')\r\n        this.state = {\r\n            reservations : [detailRDV],\r\n            error: ''\r\n        }\r\n    }\r\n\r\n    getReservations = () => {\r\n      this.props.onFetching(true)\r\n        ReservationServices.getReservations().then(\r\n          (data) => {\r\n            setTimeout(() => {\r\n              this.props.onFetching(false)\r\n              this.setState((prevState, props) => {\r\n                return ({ reservations: data })\r\n              })\r\n            }, 500);\r\n    \r\n          },\r\n          (error) => this.setState((prevState, props) => {\r\n            return ({ error: error })\r\n          })\r\n        );\r\n      }\r\n\r\n\r\n  componentDidMount= () =>{ \r\n    this.getReservations();\r\n  }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                    <div className=\"row\">\r\n                    {this.state.reservations.map(reservation => (\r\n                        <div  key={reservation.id} className=\"col-4-md\">\r\n                            <div className=\"card\" style={{height: '382px', width: '260px'}}>               \r\n                                <div className=\"list-group list-group-flush \">\r\n                                    <a href='/'><i  className=\"fa fa-times-circle\" aria-hidden=\"true\"></i></a>\r\n                                    <div className=\"list-group-item\"><strong>Nom  :</strong> {reservation.nom}</div>\r\n                                    <div className=\"list-group-item\"><strong>Prenom :</strong> {reservation.prenom}</div>\r\n                                    <div className=\"list-group-item\"><strong>Email :</strong> {reservation.email}</div>\r\n                                    <div className=\"list-group-item\"><strong>Categorie :</strong> {reservation.categorie}</div>\r\n                                    <div className=\"list-group-item\"><strong>Date :</strong> {reservation.date}</div>\r\n                                    <div className=\"list-group-item\"><strong>Heure :</strong> {reservation.heureRdv}</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                         ))}\r\n                    </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Reservations;","import React, { Component } from 'react';\r\nimport { DetailRdv } from '../../models/DetailRdv';\r\nimport ReservationServices from '../../services/ReservationService';\r\n\r\ninterface IRecipeProps {\r\n    onFetching: (fetching:boolean) => void\r\n  }\r\n  \r\n  interface IRecipeState {\r\n    reservation: DetailRdv,\r\n    error:string\r\n  }\r\n\r\nclass Reservation extends Component<IRecipeProps, IRecipeState> {\r\n    constructor(props:any) {\r\n        super(props)\r\n        let detailRDV = new DetailRdv('','','','','','')\r\n        this.state = {\r\n            reservation : detailRDV,\r\n            error: ''\r\n        }\r\n    }\r\n\r\n    addReservation = () => {\r\n    \r\n      }\r\n\r\n\r\n  componentDidMount= () =>{ \r\n  }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"container text-center\">\r\n                    <h2>Réservation</h2>\r\n                    <hr/>\r\n                    <div className=\"row justify-content-md-center\">\r\n                    <form method=\"post\" onSubmit={this.addReservation} >\r\n                        <div className=\"form-group\">\r\n                            <label>Nom : </label>\r\n                            <input type=\"text\" pattern=\"^([a-zA-Z]*)$\" className=\"form-control\"/>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Prénom : </label>\r\n                            <input type=\"text\" pattern=\"^([a-zA-Z]*)$\" className=\"form-control\" />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>email : </label>\r\n                            <input type=\"text\" className=\"form-control\" pattern=\"^.*@.*\\.[a-zA-Z]+$\" />\r\n                            \r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Catégorie : </label>\r\n                            <select className=\"form-control\" >\r\n                                <option>Manucure</option>\r\n                                <option>Pédicure</option>\r\n                            </select>\r\n                        </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Date du rendez vous : </label>\r\n                        <input type=\"date\" className=\"form-control\"/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>heure du rendez vous : </label>\r\n                        <input type=\"time\" className=\"form-control\" />\r\n                    </div>\r\n                    <div className=\"form-check\">\r\n                        <button type=\"submit\" className=\"btn btn-primary mt-2\">Envoyer</button>\r\n                    </div>\r\n            </form>\r\n                    </div>\r\n\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Reservation;","import './App.css';\nimport React, { Component } from 'react';\nimport Toolbar from './components/Toolbar';\nimport { Switch, Route } from \"react-router-dom\";\nimport Fetching from './components/Fetching'\nimport Reservations from './components/reservations/Reservations'\nimport Reservation from './components/reservations/Reservation'\n\ninterface IRecipeProps {\n}\n\ninterface IRecipeState {\n  fetching: boolean;\n}\nclass App extends Component<IRecipeProps, IRecipeState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      fetching: false\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.state.fetching ? <Fetching /> : null}\n          <Toolbar />\n          <br/>\n          <br/>\n          <br/>\n          <div className=\"container\">\n          <Switch>\n            <Route exact path=\"/reservations\" render={(props) => (\n              <Reservations {...props} onFetching={this.showfetching}/>\n            )}>\n            </Route>\n            <Route exact path=\"/reservation\" render={(props) => (\n              <Reservation {...props} onFetching={this.showfetching}/>\n            )}>\n            </Route>\n          </Switch>\n        </div>\n\n      </React.Fragment>\n    );\n  }\n\n  showfetching = (fetching:boolean) => {\n    this.setState((prevState, props) => {\n    return ({ fetching: fetching })\n  })\n  }\n\n  componentDidMount() {\n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}